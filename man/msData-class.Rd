% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S4_class_004_msData.R
\docType{class}
\name{msData-class}
\alias{msData-class}
\alias{initialize,msData-method}
\alias{show,msData-method}
\alias{analysisInfo,msData-method}
\alias{analysisInfo,msData,msData-method}
\alias{analysisTable,msData-method}
\alias{analysisTable,msData,msData-method}
\alias{filePaths,msData-method}
\alias{filePaths,msData,msData-method}
\alias{analysisNames,msData-method}
\alias{analysisNames,msData,msData-method}
\alias{replicateNames,msData-method}
\alias{replicateNames,msData,msData-method}
\alias{replicateNames<-,msData-method}
\alias{replicateNames<-,msData,msData-method}
\alias{blankReplicateNames,msData-method}
\alias{blankReplicateNames,msData,msData-method}
\alias{blankReplicateNames<-,msData-method}
\alias{blankReplicateNames<-,msData,msData-method}
\alias{polarities,msData-method}
\alias{polarities,msData,msData-method}
\alias{addAnalyses,msData-method}
\alias{addAnalyses,msData,msData-method}
\alias{getAnalyses,msData-method}
\alias{getAnalyses,msData,msData-method}
\alias{getRawData,msData-method}
\alias{getRawData,msData,msData-method}
\alias{loadRawData,msData-method}
\alias{loadRawData,msData,msData-method}
\alias{loadSpectraInfo,msData-method}
\alias{loadSpectraInfo,msData,msData-method}
\alias{getSpectra,msData-method}
\alias{getSpectra,msData,msData-method}
\alias{loadSpectra,msData-method}
\alias{loadSpectra,msData,msData-method}
\alias{hasLoadedSpectra,msData-method}
\alias{hasLoadedSpectra,msData,msData-method}
\alias{spectra,msData-method}
\alias{spectra,msData,msData-method}
\alias{plotSpectra,msData-method}
\alias{plotSpectra,msData,msData-method}
\alias{getChromatograms,msData-method}
\alias{getChromatograms,msData,msData-method}
\alias{loadChromatograms,msData-method}
\alias{loadChromatograms,msData,msData-method}
\alias{hasLoadedChromatograms,msData-method}
\alias{hasLoadedChromatograms,msData,msData-method}
\alias{chromatograms,msData-method}
\alias{chromatograms,msData,msData-method}
\alias{plotChromatograms,msData-method}
\alias{plotChromatograms,msData,msData-method}
\alias{EICs,msData-method}
\alias{EICs,msData,msData-method}
\alias{plotEICs,msData-method}
\alias{plotEICs,msData,msData-method}
\alias{TICs,msData-method}
\alias{TICs,msData,msData-method}
\alias{plotTICs,msData-method}
\alias{plotTICs,msData,msData-method}
\alias{BPCs,msData-method}
\alias{BPCs,msData,msData-method}
\alias{plotBPCs,msData-method}
\alias{plotBPCs,msData,msData-method}
\alias{XICs,msData-method}
\alias{XICs,msData,msData-method}
\alias{plotXICs,msData-method}
\alias{plotXICs,msData,msData-method}
\alias{MS2s,msData-method}
\alias{MS2s,msData,msData-method}
\alias{plotMS2s,msData-method}
\alias{plotMS2s,msData,msData-method}
\alias{addSettings,msData-method}
\alias{addSettings,msData,msData-method}
\alias{getSettingsNames,msData-method}
\alias{getSettingsNames,msData,msData-method}
\alias{getSettings,msData-method}
\alias{hasPeaks,msData-method}
\alias{hasPeaks,msData,msData-method}
\alias{peaks,msData-method}
\alias{peaks,msData,msData-method}
\alias{peakEICs,msData-method}
\alias{plotPeaks,msData,msData-method}
\alias{plotPeaks,msData-method}
\alias{mapPeaks,msData-method}
\alias{mapPeaks,msData,msData-method}
\alias{features,msData-method}
\alias{features,msData,msData-method}
\alias{plotFeatures,msData-method}
\alias{plotFeatures,msData,msData-method}
\alias{annotation,msData-method}
\alias{annotation,msData,msData-method}
\alias{plotAnnotation,msData-method}
\alias{plotAnnotation,msData,msData-method}
\alias{[,msData,ANY,missing,missing-method}
\alias{[,msData,ANY,ANY,missing-method}
\alias{[,msData,ANY,ANY,ANY-method}
\alias{getMetadataNames,msData-method}
\alias{getMetadataNames,msData,msData-method}
\alias{getMetadata,msData-method}
\alias{getMetadata,msData,msData-method}
\alias{addMetadata,msData-method}
\alias{addMetadata,msData,msData-method}
\alias{hasAdjustedRetentionTime,msData-method}
\alias{hasAdjustedRetentionTime,msData,msData-method}
\alias{as.features,msData-method}
\alias{as.features,msData,msData-method}
\alias{as.featureGroups,msData-method}
\alias{as.featureGroups,msData,msData-method}
\title{msData}
\usage{
\S4method{initialize}{msData}(
  .Object,
  files = NA_character_,
  title = NA_character_,
  date = Sys.time(),
  replicates = NA_character_,
  blanks = NA_character_,
  run_parallel = TRUE,
  ...
)

\S4method{show}{msData}(object)

\S4method{analysisInfo}{msData}(obj)

\S4method{analysisTable}{msData}(object)

\S4method{filePaths}{msData}(object)

\S4method{analysisNames}{msData}(object)

\S4method{replicateNames}{msData}(object)

\S4method{replicateNames}{msData}(object) <- value

\S4method{blankReplicateNames}{msData}(object)

\S4method{blankReplicateNames}{msData}(object) <- value

\S4method{polarities}{msData}(object)

\S4method{addAnalyses}{msData}(
  object,
  analysisList = NULL,
  replicates = NA_character_,
  blanks = NA_character_
)

\S4method{getAnalyses}{msData}(object, analyses = NULL)

\S4method{getRawData}{msData}(
  object,
  analyses = NULL,
  spectra = TRUE,
  TIC = TRUE,
  BPC = TRUE,
  chroms = TRUE,
  levels = NULL,
  rtr = NULL,
  preMZrange = NULL,
  minIntensityMS1 = 0,
  minIntensityMS2 = 0,
  run_parallel = FALSE
)

\S4method{loadRawData}{msData}(object, run_parallel = FALSE)

\S4method{loadSpectraInfo}{msData}(object, run_parallel = FALSE)

\S4method{getSpectra}{msData}(
  object,
  analyses = NULL,
  levels = NULL,
  rtr = NULL,
  preMZrange = NULL,
  minIntensityMS1 = 0,
  minIntensityMS2 = 0,
  run_parallel = FALSE
)

\S4method{loadSpectra}{msData}(object, run_parallel = FALSE)

\S4method{hasLoadedSpectra}{msData}(object)

\S4method{spectra}{msData}(object, analyses = NULL)

\S4method{plotSpectra}{msData}(
  object,
  analyses = NULL,
  ms_levels = c(1, 2),
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  colorBy = "analyses"
)

\S4method{getChromatograms}{msData}(
  object,
  analyses = NULL,
  minIntensity = 0,
  run_parallel = FALSE
)

\S4method{loadChromatograms}{msData}(object, run_parallel = FALSE)

\S4method{hasLoadedChromatograms}{msData}(object)

\S4method{chromatograms}{msData}(object, analyses = NULL)

\S4method{plotChromatograms}{msData}(
  object,
  analyses = NULL,
  index = NULL,
  id = NULL,
  colorBy = "analyses",
  interactive = FALSE
)

\S4method{EICs}{msData}(
  object,
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  run_parallel = FALSE
)

\S4method{plotEICs}{msData}(
  object,
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 30,
  id = NULL,
  run_parallel = FALSE,
  colorBy = "targets",
  legendNames = NULL,
  title = NULL,
  interactive = FALSE
)

\S4method{TICs}{msData}(object, analyses = NULL, run_parallel = FALSE)

\S4method{plotTICs}{msData}(
  object,
  analyses = NULL,
  run_parallel = FALSE,
  colorBy = "analyses",
  title = NULL,
  interactive = FALSE
)

\S4method{BPCs}{msData}(object, analyses = NULL, run_parallel = FALSE)

\S4method{plotBPCs}{msData}(
  object,
  analyses = NULL,
  run_parallel = FALSE,
  colorBy = "analyses",
  title = NULL,
  interactive = FALSE
)

\S4method{XICs}{msData}(
  object,
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  run_parallel = FALSE
)

\S4method{plotXICs}{msData}(
  object,
  analyses = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  run_parallel = FALSE,
  legendNames = NULL,
  plotTargetMark = TRUE,
  targetsMark = NULL,
  ppmMark = 5,
  secMark = 10,
  numberRows = 1
)

\S4method{MS2s}{msData}(
  object = NULL,
  analyses = NULL,
  isolationWindow = 1,
  mzClust = 0.01,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  run_parallel = FALSE
)

\S4method{plotMS2s}{msData}(
  object = NULL,
  analyses = NULL,
  isolationWindow = 1,
  mzClust = 0.01,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  id = NULL,
  run_parallel = FALSE,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = FALSE
)

\S4method{addSettings}{msData}(object, settings, where = "analyses", analyses = NULL)

\S4method{getSettingsNames}{msData}(object)

\S4method{getSettings}{msData}(object, where = "analyses", analyses = NULL, call = NULL)

\S4method{hasPeaks}{msData}(object)

\S4method{peaks}{msData}(
  object,
  analyses = NULL,
  targetsID = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 60,
  filtered = TRUE
)

\S4method{peakEICs}{msData}(
  object,
  analyses = NULL,
  targetsID = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 30,
  rtExpand = 120,
  mzExpand = 0.005,
  filtered = TRUE,
  run_parallel = FALSE
)

\S4method{plotPeaks}{msData}(
  object,
  analyses = NULL,
  targetsID = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 30,
  rtExpand = 60,
  mzExpand = 0.005,
  filtered = TRUE,
  run_parallel = FALSE,
  colorBy = "targets",
  legendNames = NULL,
  title = NULL,
  interactive = FALSE
)

\S4method{mapPeaks}{msData}(
  object,
  analyses = NULL,
  targetsID = NULL,
  mass = NULL,
  mz = NULL,
  rt = NULL,
  ppm = 20,
  sec = 30,
  filtered = TRUE,
  colorBy = "targets",
  legendNames = NULL,
  xlim = 30,
  ylim = 0.05,
  title = NULL,
  showLegend = TRUE,
  interactive = FALSE
)

\S4method{features}{msData}(
  object,
  targetsID = NULL,
  mass = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 60,
  filtered = TRUE,
  complete = FALSE,
  average = TRUE
)

\S4method{plotFeatures}{msData}(
  object,
  analyses = NULL,
  targetsID = NULL,
  mass = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 30,
  filtered = TRUE,
  colorBy = "targets",
  legendNames = NULL,
  title = NULL,
  interactive = FALSE
)

\S4method{annotation}{msData}(
  object,
  targetsID = NULL,
  mass = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 60,
  id = NULL,
  all = FALSE
)

\S4method{plotAnnotation}{msData}(
  object,
  targetsID = NULL,
  mass = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 30,
  id = NULL,
  all = FALSE,
  colorBy = "mass"
)

\S4method{[}{msData,ANY,missing,missing}(x, i, j, ..., drop = TRUE)

\S4method{[}{msData,ANY,ANY,missing}(x, i, j, ..., drop = TRUE)

\S4method{[}{msData,ANY,ANY,ANY}(x, i, j, p)

\S4method{getMetadataNames}{msData}(object, simplify = FALSE)

\S4method{getMetadata}{msData}(object, analyses = NULL, which = NULL)

\S4method{addMetadata}{msData}(object, metadata = NULL, overwrite = FALSE)

\S4method{hasAdjustedRetentionTime}{msData}(object)

\S4method{as.features}{msData}(object)

\S4method{as.featureGroups}{msData}(object)
}
\arguments{
\item{title}{A character string with the plot tile.}

\item{run_parallel}{Logical, set to \code{TRUE} for parallel processing.}

\item{...}{Other arguments.}

\item{object}{An \linkS4class{msData} object.}

\item{obj}{An \linkS4class{msData} object.}

\item{value}{A character vector applicable to the respective method.}

\item{analysisList}{A list of \linkS4class{msAnalysis} objects.}

\item{analyses}{A numeric or character vector with the index or
analysis name/s. When \code{NULL}, all the analyses are used.}

\item{spectra}{Logical, set to \code{TRUE} for parsing spectra.}

\item{TIC}{Logical, set to \code{TRUE} for parsing TIC from xml headings.}

\item{BPC}{Logical, set to \code{TRUE} for parsing BPC from xml headings.}

\item{chroms}{Logical, set to \code{TRUE} for parsing chromatograms.}

\item{levels}{A numeric vector with the MS levels for parsing spectra.}

\item{rtr}{A numeric vector of length two with the time range (in seconds)
for parsing spectra, TIC and/or BPC.}

\item{preMZrange}{A numeric vector of length two with the \code{m/z} range
of precursor ions for collecting spectra with level higher than 1.}

\item{minIntensityMS1}{Numeric value on length one with the
minimum intensity of MS1 level traces.}

\item{minIntensityMS2}{Numeric value on length one with the
minimum intensity of MS2 level traces.}

\item{mz}{A vector with target \emph{m/z} values or a two columns
\linkS4class{data.table} or data.frame with minimum and maximum
\emph{m/z} values. Alternatively, \emph{m/z} and retention time values
can be given as one \linkS4class{data.table}/data.frame and the deviations
given as \code{ppm} and \code{sec} are used to calculate the ranges.
The same also works for min and max values of \emph{m/z} and retention
time targets. Note that when mass/time ranges are given, \code{ppm} and
\code{sec} are not used.}

\item{rt}{A vector with target retention time values or
a two columns \linkS4class{data.table}/data.frame with minimum
and maximum retention time values.}

\item{ppm}{A numeric vector of length one with the mass deviation, in ppm.}

\item{sec}{A numeric vector of length one with the time deviation, in seconds.}

\item{colorBy}{A length one character vector applicable to the
respective method.}

\item{index}{A numeric vector with the index(s).}

\item{id}{An id vector with target identifiers. When not given
is added as a combination of the \emph{m/z} and retention time ranges or values.}

\item{interactive}{Logical value, set to \code{TRUE} to use
the \pkg{plotly} instead of \pkg{base}. The default is \code{FALSE}.}

\item{legendNames}{A character vector with the same length and order
as the number and order of targets to be used as plot legend.}

\item{plotTargetMark}{Logical, set to \code{TRUE} to plot a target mark.}

\item{targetsMark}{A two columns \link[data.table]{data.table} or \link{data.frame} with
\emph{m/z} and time targets. The column must be named with "mz" and "rt" for
\emph{m/z} and time values, respectively.}

\item{ppmMark}{A numeric vector of length one to define the mass deviation, in ppm,
of the target mark.}

\item{secMark}{A numeric vector of length one to define the time deviation, in seconds,
of the target mark.}

\item{numberRows}{A numeric vector of length one to define
the number of rows to grid the plots.}

\item{isolationWindow}{A numeric value defining the isolation window (in Da)
applied to isolate the MS1 precursor.}

\item{mzClust}{A numeric value defining the \emph{m/z} cutoff (in Da) to
cluster mass traces from different scans.}

\item{settings}{A \linkS4class{settings} object.}

\item{where}{A character vector defining where to get the \linkS4class{settings}.}

\item{call}{The call name of the settings to retrieve.}

\item{targetsID}{A character vector with the ID of targets
(e.g., peaks or features IDs).}

\item{mass}{...}

\item{filtered}{Logical. When \code{TRUE} (the default),
filtered data is returned. When \code{FALSE}, filtered data is excluded.}

\item{xlim}{A length one or two numeric vector
for setting the \emph{x} limits of a plot.}

\item{ylim}{A length one or two numeric vector
for setting the \emph{y} limits of a plot.}

\item{complete}{Logical, set to \code{TRUE} for a complete version of the
output.}

\item{average}{Logical, set to \code{TRUE} for returning the intensity of
features averaged for each analysis replicate group.}

\item{all}{Logical, set to \code{TRUE} for displaying all features/peaks.}

\item{x}{An \linkS4class{msData} object.}

\item{i}{The indice/s or name/s of the analyses to keep in \code{x}.}

\item{j}{The indice/s or \emph{id}/s for of features to keep.}

\item{drop}{Not applicable to \linkS4class{msData}.}

\item{p}{The indice/s or \emph{id}/s of peaks to keep.}

\item{simplify}{Logical, set to \code{TRUE} for simplifying
the returned object.}

\item{which}{A character vector with the entry name/s.}

\item{metadata}{A list with a named vector of metadata for each analyses
in the \linkS4class{msData} object or a \code{data.frame} or
\code{data.table} with metadata added as columns and with the number of
rows equal to the number of analyses in the \linkS4class{msData} object.}

\item{overwrite}{Logical, set to \code{TRUE} to overwrite existing metadata
entries.}
}
\description{
An S4 class object to store and manage processing of mass
spcetrometric analyses. The \code{msData} object inherits the
\linkS4class{streamSet} structure plus the features slot for
processing MS data.
}
\section{Methods (by generic)}{
\itemize{
\item \code{initialize(msData)}: creates an \linkS4class{msData} object.

\item \code{show(msData)}: prints a summary of the \linkS4class{msData}.

\item \code{analysisInfo(msData)}: getter for analysis info as \link{data.frame} with
four columns: path, analysis, group and blank. The \link{data.frame}
can be used as analysisInfo in \pkg{patRoon}.

\item \code{analysisTable(msData)}: getter for analysis table as \link{data.table} with
four columns: file, analysis, replicate, blank, class and polarity.

\item \code{filePaths(msData)}: getter for analysis file full paths.

\item \code{analysisNames(msData)}: getter for analysis names.

\item \code{replicateNames(msData)}: getter for replicate names.

\item \code{replicateNames(msData) <- value}: setter for analysis replicate names.
The \code{value} is a character vector with the same length as
the number of analyses in the \code{object},
containing analysis replicate name for each analysis.

\item \code{blankReplicateNames(msData)}: getter for blank replicate names.

\item \code{blankReplicateNames(msData) <- value}: setter for associated blank replicates for each analysis.
The \code{value} is a character vector with the same length as
the number of analyses in the \code{object},
containing the associated blank replicate name of each analysis.

\item \code{polarities(msData)}: getter for the polarity of the analyses.

\item \code{addAnalyses(msData)}: adds \linkS4class{msAnalysis} objects to the existing
\linkS4class{msData} object.

\item \code{getAnalyses(msData)}: getter for \linkS4class{msAnalysis} objects within the
\linkS4class{msData} object.

\item \code{getRawData(msData)}: gets (when available) raw spectra and chromatograms
from each analysis in the \linkS4class{msData} object.

\item \code{loadRawData(msData)}: adds raw data to all or defined analyses in the
\linkS4class{msData} object.

\item \code{loadSpectraInfo(msData)}: adds raw spectra information (i.e., scan number,
ms level and retention time of each spectrum) to the slot \code{spectra}
of each \linkS4class{msAnalysis} in the \linkS4class{msData}.
If the levels are higher than one, as the case of MS/MS data,
the collision energy and precursor scan and \emph{m/z} are also returned.

\item \code{getSpectra(msData)}: adds (when available) raw spectra to each
\linkS4class{msAnalysis} of the \linkS4class{msData} object.

\item \code{loadSpectra(msData)}: adds (when available) raw spectra to each
\linkS4class{msAnalysis} of the \linkS4class{msData} object.

\item \code{hasLoadedSpectra(msData)}: checks if the analyses in the \linkS4class{msData} have
loaded raw spectra.

\item \code{spectra(msData)}: getter for slot spectra from \linkS4class{msAnalysis}
objects of the in the \linkS4class{msData} object.

\item \code{plotSpectra(msData)}: plots spectra from \linkS4class{msAnalysis} objects
in the \linkS4class{msData} object in 3D. The arguments \code{mz},
\code{ppm}, \code{rt} and \code{sec} are used to construct the targets.
See ?\link{makeTargets} for more information. The argument \code{colorBy}
can be set to \emph{analyses} or \emph{levels} to color by
\linkS4class{msAnalysis} or MS levels.

\item \code{getChromatograms(msData)}: adds (when available) raw spectra to each
\linkS4class{msAnalysis} of the \linkS4class{msData} object.

\item \code{loadChromatograms(msData)}: adds (when available) raw spectra to each
\linkS4class{msAnalysis} of the \linkS4class{msData} object.

\item \code{hasLoadedChromatograms(msData)}: checks if the analyses in the \linkS4class{msData} have
loaded raw chromatograms.

\item \code{chromatograms(msData)}: getter for slot chromatograms in the
\linkS4class{msAnalysis} objects of the \linkS4class{msData} object.

\item \code{plotChromatograms(msData)}: plots chromatograms from \linkS4class{msAnalysis} in the
\linkS4class{msData} object.

\item \code{EICs(msData)}: get extracted ion chromatograms (EICs)
for specified \emph{m/z} (Da) and retention time (seconds) targets
in given analyses. The arguments \code{mz}, \code{ppm}, \code{rt}
and \code{sec} are used to construct the targets.
See ?\link{makeTargets} for more information.

\item \code{plotEICs(msData)}: plots extracted ion chromatograms (EICs)
of data in an \linkS4class{msData} object.
The arguments for data collection are the same as the \link{EICs} method.
A \linkS4class{data.table} can be used instead.
The \code{colorBy} argument can be \code{"analyses"}, \code{replicates} or
\code{targets} (the default), for coloring by analyses, replicates or targets
of the EICs, respectively.  The \code{legendNames} is a character vector
with the same length as targets for plotting and can be used to legend
the plot. Note that, by setting \code{legendNames} the \code{colorBy}
is set to "targets".

\item \code{TICs(msData)}: extracts total ion chromatograms (TICs)
for analyses in the \linkS4class{msData} object.

\item \code{plotTICs(msData)}: plots the total ion chromatogram (TIC) for analyses
in the \linkS4class{msData} object. The \code{colorBy} argument can be
"analyses" or "replicates" to color the plot by analyses or
by analysis replicates.

\item \code{BPCs(msData)}: extracts base peak chromatograms (BPCs)
for analyses in the \linkS4class{msData} object.

\item \code{plotBPCs(msData)}: plots the base peak chromatogram (BPC) of analyses
in the \linkS4class{msData} object. The \code{colorBy} argument can be
"analyses" or "replicates" to color the plot by analyses or
by analysis replicates.

\item \code{XICs(msData)}: get three dimensional (\emph{m/z}, time and intensity)
extracted ion chromatograms (XICs) for specified \emph{m/z} and retention
time pair targets in analyses of an \linkS4class{msData} object.
The arguments \code{mz}, \code{ppm}, \code{rt}, \code{sec} and \code{id}
are used to construct the targets.
See ?\link{makeTargets} for more information.

\item \code{plotXICs(msData)}: plots three dimensional (\emph{m/z}, time and intensity)
extracted ion chromatograms (XICs) for specified \emph{m/z} and retention
time pair targets in analyses of an \linkS4class{msData} object.
The arguments \code{mz}, \code{ppm}, \code{rt}, \code{sec} and \code{id}
are used to construct the targets.
See ?\link{makeTargets} for more information.
When \code{plotTargetMark} is \code{TRUE} a target is plotted representing
the deviations as defined by the arguments \code{ppmMark} and \code{secMark}
in ppm and seconds, respectively. When ranges were given to build the XIC,
exact \emph{m/z} and time targets can be specified with the argument
\code{targetsMark}. \code{targetsMark} should be a two column table
named mz and rt with exact \emph{m/z} and time targets. Note that the number
of rows should be the same as the number of target in the XIC.
The number of rows to plot multiple targets can be defined by the
\code{numberRows} argument.

\item \code{MS2s(msData)}: gets MS2 data for specified \emph{m/z} and retention
time (seconds) targets in analyses of the \linkS4class{msData} object.
The argument \code{isolationWindow} defines the range in Da that was applied
to isolate the MS1 precursor. The argument \code{mzClust} defines the
deviation in Da for merging MS2 spectrum of a given target.
The \code{mzClust} will be reduced when more than one trace is found for the
same retention time value.

\item \code{plotMS2s(msData)}: plots MS2 data for specified \emph{m/z} and retention
time (seconds) targets in analyses of the \linkS4class{msData} object.
The argument \code{isolationWindow} defines the range in Da that was applied
to isolate the MS1 precursor. The argument \code{mzClust} defines the
deviation in Da for merging MS2 spectrum of a given target.
The \code{mzClust} will be reduced when more than one trace is found for the
same retention time value. The possible values for the \code{colorBy}
argument are "targets", "analyses" and "replicates" to color by
each target, analyses or replicate analysis groups, respectively.

\item \code{addSettings(msData)}: adds processing settings to \linkS4class{msAnalysis} or
\linkS4class{msFeatures} objects in the \linkS4class{msData} as defined by
the argument \code{where}. So where can be either "analyses" or "features".

\item \code{getSettingsNames(msData)}: gets the call names of processing settings in the
\linkS4class{msData} object for both analyses and features.

\item \code{getSettings(msData)}: gets processing settings from \linkS4class{msAnalysis} or
\linkS4class{msFeatures} objects in the \linkS4class{msData} as defined by
the argument \code{where}. So where can be either "analyses" or "features".
The argument \code{call} is used to specify which settings are returned
from the object defined in \code{where}. When, \code{call} is \code{NULL}
all the settings are returned.

\item \code{hasPeaks(msData)}: checks if the \linkS4class{msAnalysis} objects in the
\linkS4class{msData} object have peaks.

\item \code{peaks(msData)}: getter for chromatographic peaks from the
\linkS4class{msAnalysis} objects in the \linkS4class{msData} object.
The arguments \code{targetID} and \code{mass}, \code{mz} and \code{rt}
can be used to select specific peaks. The \emph{id} of peaks and/or
features can be given in the \code{targetsID} argument to select the
respective peaks. Also, analyses can be selected using the \code{analyses}
argument. When the \code{filtered} argument is set to \code{TRUE}, filtered
peaks are also returned.

\item \code{peakEICs(msData)}: getter of peak EICs from \linkS4class{msAnalysis}
objects in the \linkS4class{msData} object.
The arguments \code{targetID} and \code{mass}, \code{mz} and \code{rt}
can be used to select specific peaks. The \emph{id} of peaks and/or
features can be given in the \code{targetsID} argument to select the
respective peaks. Also, analyses can be selected using the \code{analyses}
argument. When the \code{filtered} argument is set to \code{TRUE}, filtered
peaks are also returned.

\item \code{plotPeaks(msData)}: plots chromatographic peaks from \linkS4class{msAnalysis}
objects in the \linkS4class{msData} object.
The arguments \code{targetID} and \code{mass}, \code{mz} and \code{rt}
can be used to select specific peaks. The \emph{id} of peaks and/or
features can be given in the \code{targetsID} argument to select the
respective peaks. Also, analyses can be selected using the \code{analyses}
argument. When the \code{filtered} argument is set to \code{TRUE}, filtered
peaks are also returned.
The \code{colorBy} argument can be be \code{"analyses"}, \code{replicates}
or \code{targets} (the default), for coloring by analyses, replicates or
peak targets, respectively. The \code{legendNames} is a character vector
with the same length as targets for plotting and can be used to legend
the plot. Note that, by setting \code{legendNames} the \code{colorBy}
is set to "targets" automatically.

\item \code{mapPeaks(msData)}: mapps peaks mass and time space.
The \code{colorBy} argument can be be \code{"analyses"}, \code{replicates}
or \code{targets} (the default), for coloring by analyses, replicates or
peak targets, respectively. The \code{legendNames} is a character vector
with the same length as targets for plotting and can be used to legend the
plot. Note that, by setting \code{legendNames} the \code{colorBy} is set to
"targets" automatically.

\item \code{features(msData)}: getter for features (i.e., grouped peaks). When complete
is set to \code{TRUE}, additional feature metadata is also returned.

\item \code{plotFeatures(msData)}: A method for plotting peaks from given features
in an \linkS4class{msData} object.
The \code{colorBy} argument can be be \code{"analyses"}, \code{replicates} or \code{targets}
(the default), for coloring by analyses, replicates or peak targets, respectively.
The \code{legendNames} is a character vector with the same length as targets for plotting and
can be used to lengend the plot. Note that, by setting \code{legendNames} the \code{colorBy}
is set to "targets" automatically.

\item \code{annotation(msData)}: getter for annotation (i.e., isotopes and adducts clusters).
When giving the argument \code{all} as \code{TRUE},
all the features within the target feature annotation cluster are included in the output.

\item \code{plotAnnotation(msData)}: plots peaks from given feature annotation targets
in the \linkS4class{msData} object. The \code{colorBy} argument can be
set to \code{"isotopes"} for coloring by monoisotopic mass instead of
neutral mass of the cluster.

\item \code{x[i}: subset on analyses, using indexes or analysis names.

\item \code{x[i}: subset on analyses and features, using index or name.
Note that this method is irreversible.

\item \code{x[i}: subset on analyses, features and peaks, using index or name.
Note that this method is irreversible.

\item \code{getMetadataNames(msData)}: getter for the names of metadata in each analyses.
When simplify is set to \code{TRUE}, a character vector of unique names for
all analyses is returned instead of a list with metadata names for
each analysis.

\item \code{getMetadata(msData)}: getter for analyses metadata.
Returns a \code{data.table} with each metadata entry as a column and each
analysis as a row. The \code{which} argument is used to filter the metadata
entries to be returned. When \code{which} is \code{NULL}, all entries are
returned. Metadata entries with multiple values are returned as list in the
\code{data.table} cell. Metadata not present in a given analysis is assigned
as NA in the returned \code{data.table}.

\item \code{addMetadata(msData)}: setter for analyses metadata.

\item \code{hasAdjustedRetentionTime(msData)}: getter for presence of adjusted retention time
in the analyses.

\item \code{as.features(msData)}: converts the \linkS4class{msData}
to a \linkS4class{features} object from the package \pkg{patRoon}.

\item \code{as.featureGroups(msData)}: converts the \linkS4class{msData}
to a \linkS4class{featureGroups} object from the package \pkg{patRoon}.

}}
\section{Slots}{

\describe{
\item{\code{title}}{A character string defining the title.}

\item{\code{date}}{A \code{POSIXt} class object.}

\item{\code{analyses}}{A list with \linkS4class{msAnalysis} objects.}

\item{\code{features}}{An \linkS4class{msFeatures} class object.}
}}

